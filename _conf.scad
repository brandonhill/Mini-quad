
include <../BH-Lib/all.scad>;

// TODO: tidy up
TOLERANCE = 0.25;
TOLERANCE_CLOSE = 0.15;
TOLERANCE_FIT = 0.2;
TOLERANCE_CLEAR = 0.25;

// CONSTANTS

BATT_2200_60C_DIM = [108, 34, 28];

MOTOR_2204_DIM = [28, [7, 11, 12]];
MOTOR_2204_SHAFT_RAD = 5 / 2;
MOTOR_2204_SCREW_SPACING = [16, 19];
MOTOR_2204_SCREW_DEPTH = 4;
MOTOR_2204_CLEARANCE_DIM = [8, 2]; // dia, height

// CONFIG

PRINT_LAYER = 0.2;
PRINT_NOZZLE = 0.5;
FINAL_RENDER = false;

//ANT_HOLE_HEIGHT = 2;
//ANT_HOLE_RAD = ANT_SMA_RAD;
//ANT_NUT_RAD = ANT_SMA_NUT_RAD;
//ANT_MOUNT_NUT_DIM = NUT_M2_DIM;
//ANT_MOUNT_SCREW_DIM = SCREW_M2_SOCKET_DIM;
//ANT_MOUNT_SCREW_LENGTH = 8;
//ANT_MOUNT_SURROUND = 3;
ANT_MOUNT_THICKNESS = 3;
//ANT_SUPPORT_THICKNESS = 2;
//ANT_WIRE_HOLE_RAD = 3;

BATT_DIM = BATT_2200_60C_DIM;

BOOM_ANGLE = 45; // best to keep this 45 to (maintain symmetry, and) minimize number of different parts
BOOM_HEIGHT = 15; // this is what your strips of CF are cut to..
BOOM_THICKNESS = 2; // thickness of your CF

BUZZER_DIM = [10, 6];

CAM_ANGLE = 25;
CAM_DIM = CAM_RUNCAM_SWIFT_MICRO_DIM;
CAM_HOUSING_DIM = [19, 19, 10];
CAM_LENS_DIM = [[6, 3], [5, 3], [6, 3]]; // [rad, height]
CAM_MOUNT_ARM_THICKNESS = 3;
CAM_MOUNT_HEIGHT = 20;
CAM_MOUNT_NUT_DIM = NUT_M2_DIM;
CAM_MOUNT_SCREW_DIM = SCREW_M2_SOCKET_DIM;
CAM_MOUNT_SCREW_LENGTH = 8;
CAM_MOUNT_SCREW_SURROUND = 2;
//CAM_MOUNT_THICKNESS = ANT_MOUNT_THICKNESS;
CAM_PIVOT_OFFSET = CAM_RUNCAM_SWIFT_MICRO_PIVOT_OFFSET;
//  CAM_MOUNT_OUTSET = max(CAM_MOUNT_THICKNESS / 2, 3);
CAM_SCREW_DIM = SCREW_M2_SOCKET_DIM;

//CANOPY_CAM_CUTOUT_RAD = CAM_LENS_DIM[2][0] + 1;
//CANOPY_CLIP_HEIGHT = 5;
//CANOPY_CLIP_FRONT_LIP = 1;
//CANOPY_CLIP_FRONT_THICKNESS = 1;
CANOPY_ROUNDING = 4;
CANOPY_THICKNESS = 0.8;

CLEARANCE = 0.5; // clearance between components

FC_BOARD_THICKNESS = FC_OMNIBUS_F3_PRO_BOARD_THICKNESS;
FC_DIM = FC_OMNIBUS_F3_PRO_DIM; // Omnibus F3 Pro
FC_HOLE_SPACING = FC_OMNIBUS_F3_PRO_HOLE_SPACING;
FC_HOLE_RAD = FC_OMNIBUS_F3_PRO_HOLE_RAD;
FC_MOUNT_HEIGHT = 4;
FC_MOUNT_NUT_DIM = NUT_M3_DIM;
FC_MOUNT_THREAD_PITCH = THREAD_PITCH_M3_COARSE;

FRAME_DIM = [48, 48];
//FRAME_ACC_NUT_DIM = NUT_M2_DIM;
//FRAME_ACC_SCREW_DIM = SCREW_M2_SOCKET_DIM;
FRAME_ACC_SCREW_SPACING = FRAME_DIM[1] - 16;
FRAME_CLAMP_LENGTH = 20;
FRAME_CLAMP_NUT_DIM = NUT_M2_DIM;
FRAME_CLAMP_SCREW_DIM = SCREW_M2_SOCKET_DIM;
FRAME_CLAMP_SCREW_SURROUND = 2;
FRAME_CLAMP_THICKNESS_BOT = 2;
FRAME_CLAMP_THICKNESS_TOP = 3; // accommodate nut countersinks
FRAME_CLAMP_WIDTH = 2;
FRAME_PLATE_THICKNESS = 1;
FRAME_WALL_THICKNESS = 3;

MOTOR_DIM = MOTOR_2204_DIM;
MOTOR_CLEARANCE_DIM = MOTOR_2204_CLEARANCE_DIM;
MOTOR_MOUNT_OUTSET = 2; // motor protection
MOTOR_OUTSET_ANGLE = 180; // amount of motor protection (deg)
MOTOR_MOUNT_RAD = MOTOR_DIM[0] / 2;
MOTOR_SCREW_SPACING = MOTOR_2204_SCREW_SPACING;
MOTOR_SCREW_DIM = SCREW_M3_SOCKET_DIM;
MOTOR_SCREW_LENGTH = 8;
MOTOR_SCREW_DEPTH = MOTOR_2204_SCREW_DEPTH; // amount of thread safe to screw into motor
MOTOR_MOUNT_THICKNESS = MOTOR_SCREW_LENGTH - MOTOR_SCREW_DEPTH;
//MOTOR_MOUNT_THICKNESS = 1; // test
MOTOR_SHAFT_RAD = MOTOR_2204_SHAFT_RAD;

PROP_RAD = 5 * MMPI / 2;

RX_DIM = RX_FRSKY_XM_PLUS_DIM;

SIZE_DIA = 185;

STRAP_HOLE_DIM = [12, 3];

VTX_ANT_MOUNT_DIM = VTX_VTX03_ANT_MOUNT_DIM;
VTX_DIM = VTX_VTX03_DIM;

// SETUP

//ANT_MOUNT_OUTSET = ANT_MOUNT_THICKNESS + ANT_HOLE_RAD + TOLERANCE_CLEAR + ANT_MOUNT_SURROUND;

SIZE = [
	sin(90 - BOOM_ANGLE) * SIZE_DIA,
	cos(90 - BOOM_ANGLE) * SIZE_DIA
];

BOOM_LENGTH_NAT =
	sqrt(
		pow(SIZE[0] / 2, 2)
		+ pow(SIZE[1] / 2, 2)
	)
	- FRAME_CLAMP_WIDTH
	- TOLERANCE_FIT
	+ MOTOR_DIM[0] / 2
	;
BOOM_LENGTH = ceil(BOOM_LENGTH_NAT);
BOOM_LENGTH = 99; // maximize usage of 10x30cm stock

BOOM_DIM = [BOOM_LENGTH, BOOM_THICKNESS, BOOM_HEIGHT];

FRAME_HEIGHT = FRAME_CLAMP_THICKNESS_BOT + BOOM_DIM[2] + FRAME_CLAMP_THICKNESS_TOP;

ANT_POS = [-31, 0, FRAME_HEIGHT];
ANT_ROT = [0, -90];

BUZZER_POS = [0, -10, FRAME_HEIGHT - (FRAME_CLAMP_THICKNESS_TOP + FRAME_CLAMP_THICKNESS_BOT) / 2];
BUZZER_ROT = [90, -90];

CAM_POS = [
	FC_DIM[0] / 2 + CAM_DIM[2] / 2 + 3,
	0,
	FRAME_HEIGHT - (FRAME_CLAMP_THICKNESS_TOP + FRAME_CLAMP_THICKNESS_BOT) / 2];
CAM_ROT = [0, -CAM_ANGLE];
CAM_PROTRUSION = CAM_HOUSING_DIM[2] + CAM_LENS_DIM[0][1] + CAM_LENS_DIM[1][1] + CAM_LENS_DIM[2][1] - CAM_PIVOT_OFFSET;

//CLAMP_WIDTH = BOOM_THICKNESS + (FRAME_CLAMP_WIDTH + TOLERANCE_CLOSE) * 2;

LANDING_GEAR_HEIGHT = BATT_DIM[2];

FC_POS = [0, 0, FRAME_HEIGHT + FC_BOARD_THICKNESS / 2 + FC_MOUNT_HEIGHT];
FC_ROT = [];

FRAME_ACC_WIDTH = FRAME_DIM[1] - (FRAME_CLAMP_WIDTH + BOOM_THICKNESS) * 3/2;
FRAME_CLAMP_SCREW_LENGTH = FRAME_HEIGHT + FRAME_CLAMP_SCREW_DIM[2] - FRAME_CLAMP_NUT_DIM[2];

//POS_FRAME_ACC_FRONT = [
//	FRAME_DIM[0] / 2 + FRAME_CLAMP_WIDTH + TOLERANCE_CLEAR + CAM_MOUNT_THICKNESS / 2,
//	0,
//	FRAME_HEIGHT - (FRAME_CLAMP_THICKNESS_TOP + FRAME_CLAMP_THICKNESS_BOT) / 2];
//POS_FRAME_ACC_BACK = [-(POS_FRAME_ACC_FRONT[0] - CAM_MOUNT_THICKNESS / 2 + ANT_MOUNT_THICKNESS / 2), POS_FRAME_ACC_FRONT[1], POS_FRAME_ACC_FRONT[2]];

RX_POS = [
		0,
		18,
		FRAME_HEIGHT - (FRAME_CLAMP_THICKNESS_TOP + FRAME_CLAMP_THICKNESS_BOT) / 2 - 2
	];
RX_ROT = [90, 0, 180];

CANOPY_CAM_HEIGHT = CAM_HOUSING_DIM[1] + (CANOPY_THICKNESS + 1) * 2;
CANOPY_CLIP_SPACING = FRAME_DIM[1] * 0.5;
CANOPY_CLIP_WIDTH = FRAME_DIM[1] * 0.25;
CANOPY_CLIP_FRONT_WIDTH = FRAME_ACC_WIDTH * 0.75;

//CANOPY_LENGTH = FRAME_DIM[0] + FRAME_WALL_THICKNESS * 2 + ANT_MOUNT_THICKNESS + CAM_MOUNT_THICKNESS + CAM_PROTRUSION + CAM_MOUNT_OUTSET;
//CANOPY_HEIGHT_BACK = FC_POS[2] + FC_DIM[2] + CANOPY_ROUNDING;
//CANOPY_HEIGHT_FRONT = BOOM_HEIGHT + CAM_MOUNT_HEIGHT + CANOPY_CAM_HEIGHT / 2;
//CANOPY_ANGLE_TOP = atan((CANOPY_HEIGHT_FRONT - CANOPY_HEIGHT_BACK) / (CANOPY_LENGTH - ANT_MOUNT_THICKNESS - FRAME_WALL_THICKNESS - CANOPY_ROUNDING));

//STRUT_DIM = [SIZE[0] - MOTOR_MOUNT_RAD * 2, BOOM_DIM[1], BOOM_DIM[2]];
STRUT_DIM = BOOM_DIM; // make life easy and keep all stock the same dimensions

//STRUT_POS = [
//	-(SIZE[0] / 2 - MOTOR_MOUNT_RAD + STRUT_DIM[1]),
//	-(SIZE[1] / 2 - MOTOR_MOUNT_RAD + STRUT_DIM[1])
//];
STRUT_POS = [
	-(STRUT_DIM[0] / 2 / tan(BOOM_ANGLE) + sin(BOOM_ANGLE) * STRUT_DIM[1] + STRUT_DIM[1] / 2),
	-(STRUT_DIM[0] / 2 / tan(90 - BOOM_ANGLE) + sin(BOOM_ANGLE) * STRUT_DIM[1] + STRUT_DIM[1] / 2),
];

VTX_POS = [-16, 0, VTX_DIM[1] / 2];
VTX_ROT = [-90, 0, 90];

